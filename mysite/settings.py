"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
#定义项目根目录
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#定义上传文件夹的路径
UPLOAD_ROOT = os.path.join(BASE_DIR,'upload')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#秘钥
SECRET_KEY = 'n1p+hvdaisv9yw4kwbqm@8mi)=$+j4=s58=20&*@n^b=7-vk8%'

# SECURITY WARNING: don't run with debug turned on in production!
#调试模式
#如果统一捕获异常，意味着服务已经上线，所以应该关闭调试模式
DEBUG = True
#设置允许访问的来源 *代表所有来源
ALLOWED_HOSTS = ['*']


# Application definition
#已经安装的django应用
#将自己的应用，填充到配置文件中去
#将新建的子应用名称，填入到已安装的已安装的应用列表中去
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mytest',
    'mysite',
    'myapp',
    'supermarket',
    "rest_framework",
    'kaoshi',
]

#中间件模式
#自定义中间件
#项目名.文件名
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'mysite.my_middle.MyMiddle'
]
#定义路由文件名
ROOT_URLCONF = 'mysite.urls'

#模板配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #自定义上下文处理器的位置
                'supermarket.context_processor.get_daytime',
            
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
#数据库配置
DATABASES = {
   'default': {
          'ENGINE': 'django.db.backends.mysql', #数据库引擎
          'NAME': 'mydjango',                       #数据库名
          'USER': 'root',                       #用户名
          'PASSWORD': 'mysql',                   #密码
          'HOST': '',                           #数据库主机，默认为localhost
          'PORT': '',                           #数据库端口，MySQL默认为3306
          'OPTIONS': {
             'autocommit': True,
         }
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators
#密码相关配置
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

#语言相关配置

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
#定义静态文件目录
STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)
